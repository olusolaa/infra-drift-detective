// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	aws "github.com/aws/aws-sdk-go-v2/aws"

	domain "github.com/olusolaa/infra-drift-detector/internal/core/domain"

	mock "github.com/stretchr/testify/mock"

	ports "github.com/olusolaa/infra-drift-detector/internal/core/ports"
)

// S3ResourceBuilder is an autogenerated mock type for the S3ResourceBuilder type
type S3ResourceBuilder struct {
	mock.Mock
}

// Build provides a mock function with given fields: ctx, bucketName, accountID, cfg, logger
func (_m *S3ResourceBuilder) Build(ctx context.Context, bucketName string, accountID string, cfg aws.Config, logger ports.Logger) (domain.PlatformResource, error) {
	ret := _m.Called(ctx, bucketName, accountID, cfg, logger)

	if len(ret) == 0 {
		panic("no return value specified for Build")
	}

	var r0 domain.PlatformResource
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, aws.Config, ports.Logger) (domain.PlatformResource, error)); ok {
		return rf(ctx, bucketName, accountID, cfg, logger)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string, aws.Config, ports.Logger) domain.PlatformResource); ok {
		r0 = rf(ctx, bucketName, accountID, cfg, logger)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.PlatformResource)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string, aws.Config, ports.Logger) error); ok {
		r1 = rf(ctx, bucketName, accountID, cfg, logger)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewS3ResourceBuilder creates a new instance of S3ResourceBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewS3ResourceBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *S3ResourceBuilder {
	mock := &S3ResourceBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
