// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	domain "github.com/olusolaa/infra-drift-detector/internal/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// StateResource is an autogenerated mock type for the StateResource type
type StateResource struct {
	mock.Mock
}

// Attributes provides a mock function with no fields
func (_m *StateResource) Attributes() map[string]interface{} {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Attributes")
	}

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func() map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	return r0
}

// Metadata provides a mock function with no fields
func (_m *StateResource) Metadata() domain.ResourceMetadata {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Metadata")
	}

	var r0 domain.ResourceMetadata
	if rf, ok := ret.Get(0).(func() domain.ResourceMetadata); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.ResourceMetadata)
	}

	return r0
}

// NewStateResource creates a new instance of StateResource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStateResource(t interface {
	mock.TestingT
	Cleanup(func())
}) *StateResource {
	mock := &StateResource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
