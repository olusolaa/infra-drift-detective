// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/olusolaa/infra-drift-detector/internal/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// ResourceComparer is an autogenerated mock type for the ResourceComparer type
type ResourceComparer struct {
	mock.Mock
}

// Compare provides a mock function with given fields: ctx, desired, actual, attributesToCheck
func (_m *ResourceComparer) Compare(ctx context.Context, desired domain.StateResource, actual domain.PlatformResource, attributesToCheck []string) ([]domain.AttributeDiff, error) {
	ret := _m.Called(ctx, desired, actual, attributesToCheck)

	if len(ret) == 0 {
		panic("no return value specified for Compare")
	}

	var r0 []domain.AttributeDiff
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.StateResource, domain.PlatformResource, []string) ([]domain.AttributeDiff, error)); ok {
		return rf(ctx, desired, actual, attributesToCheck)
	}
	if rf, ok := ret.Get(0).(func(context.Context, domain.StateResource, domain.PlatformResource, []string) []domain.AttributeDiff); ok {
		r0 = rf(ctx, desired, actual, attributesToCheck)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.AttributeDiff)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, domain.StateResource, domain.PlatformResource, []string) error); ok {
		r1 = rf(ctx, desired, actual, attributesToCheck)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Kind provides a mock function with no fields
func (_m *ResourceComparer) Kind() domain.ResourceKind {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Kind")
	}

	var r0 domain.ResourceKind
	if rf, ok := ret.Get(0).(func() domain.ResourceKind); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.ResourceKind)
	}

	return r0
}

// NewResourceComparer creates a new instance of ResourceComparer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewResourceComparer(t interface {
	mock.TestingT
	Cleanup(func())
}) *ResourceComparer {
	mock := &ResourceComparer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
